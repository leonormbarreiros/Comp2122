Terminals unused in grammar

    tPRIVATE


Grammar

    0 $accept: file $end

    1 file: program
    2     | decls program

    3 program: tBEGIN block tEND

    4 decls: decl
    5      | decls decl

    6 decl: vardecl ';'
    7     | fundecl

    8 vardecl: tPUBLIC type tIDENTIFIER
    9        | tPUBLIC type tIDENTIFIER '=' expr
   10        | tPUBLIC tVAR tIDENTIFIER '=' expr
   11        | tPUBLIC tIDENTIFIER '=' expr
   12        | tUSE type tIDENTIFIER
   13        | tFOREIGN type tIDENTIFIER
   14        | var
   15        | type tIDENTIFIER '=' expr
   16        | tVAR tIDENTIFIER '=' expr

   17 fundecl: tPUBLIC type tIDENTIFIER '=' block_expr
   18        | tPUBLIC tVAR tIDENTIFIER '=' block_expr
   19        | tPUBLIC tIDENTIFIER '=' block_expr
   20        | tFOREIGN type tIDENTIFIER '=' block_expr
   21        | tFOREIGN tVAR tIDENTIFIER '=' block_expr
   22        | tFOREIGN tIDENTIFIER '=' block_expr
   23        | type tIDENTIFIER '=' block_expr
   24        | tVAR tIDENTIFIER '=' block_expr

   25 fun_def: '(' vars ')' tRETURN_TYPE type ':' block
   26        | '(' ')' tRETURN_TYPE type ':' block
   27        | '(' vars ')' tRETURN_TYPE type_void ':' block
   28        | '(' ')' tRETURN_TYPE type_void ':' block

   29 fun_call: expr '(' exprs ')'
   30         | expr '(' ')'
   31         | '@' '(' exprs ')'
   32         | '@' '(' ')'
   33         | '(' fun_def ')' '(' exprs ')'
   34         | '(' fun_def ')' '(' ')'

   35 vars: var
   36     | var ',' vars

   37 var: type tIDENTIFIER

   38 type: tINT_TYPE
   39     | tREAL_TYPE
   40     | tSTRING_TYPE
   41     | '[' type ']'
   42     | '[' type_void ']'
   43     | type_func

   44 type_void: tVOID_TYPE

   45 type_func: type '<' args '>'
   46          | type '<' '>'
   47          | type_void '<' args '>'
   48          | type_void '<' '>'

   49 args: type
   50     | type ',' args

   51 block: '{' instrs '}'
   52      | '{' decls '}'
   53      | '{' decls instrs '}'

   54 instrs: instr
   55       | block_instr
   56       | instr ';' instrs
   57       | block_instr instrs

   58 instr: tWRITE exprs
   59      | tWRITELN exprs
   60      | tAGAIN
   61      | tSTOP
   62      | tRETURN expr
   63      | tRETURN
   64      | expr
   65      | tWITH expr tCHANGE expr tRETURN_TYPE expr tDOTS expr
   66      | tWITH block_expr tCHANGE expr tRETURN_TYPE expr tDOTS expr
   67      | tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH expr tIF expr
   68      | tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH block_expr tIF expr

   69 block_instr: tIF '(' expr ')' tTHEN block
   70            | tIF '(' expr ')' tTHEN block elif
   71            | tWHILE '(' expr ')' tDO block
   72            | lval '=' block_expr
   73            | tRETURN fun_def

   74 elif: tELSE block
   75     | tELIF '(' expr ')' tTHEN block
   76     | tELIF '(' expr ')' tTHEN block elif

   77 exprs: expr
   78      | exprs ',' expr
   79      | block_expr
   80      | exprs ',' block_expr

   81 expr: tINTEGER
   82     | tREAL
   83     | string
   84     | tNULL
   85     | lval
   86     | lval '=' expr
   87     | expr '+' expr
   88     | expr '-' expr
   89     | expr '*' expr
   90     | expr '/' expr
   91     | expr '%' expr
   92     | expr '|' expr
   93     | expr '&' expr
   94     | expr '<' expr
   95     | expr '>' expr
   96     | expr tGE expr
   97     | expr tLE expr
   98     | expr tNE expr
   99     | expr tEQ expr
  100     | tNOT expr
  101     | '+' expr
  102     | '-' expr
  103     | '(' expr ')'
  104     | tSIZEOF '(' expr ')'
  105     | '[' expr ']'
  106     | lval '?'
  107     | tINPUT
  108     | fun_call

  109 block_expr: fun_def
  110           | lval '=' block_expr

  111 lval: tIDENTIFIER
  112     | expr '[' expr ']'

  113 string: tSTRING
  114       | string tSTRING


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 91
    '&' (38) 93
    '(' (40) 25 26 27 28 29 30 31 32 33 34 69 70 71 75 76 103 104
    ')' (41) 25 26 27 28 29 30 31 32 33 34 69 70 71 75 76 103 104
    '*' (42) 89
    '+' (43) 87 101
    ',' (44) 36 50 78 80
    '-' (45) 88 102
    '/' (47) 90
    ':' (58) 25 26 27 28
    ';' (59) 6 56
    '<' (60) 45 46 47 48 94
    '=' (61) 9 10 11 15 16 17 18 19 20 21 22 23 24 72 86 110
    '>' (62) 45 46 47 48 95
    '?' (63) 106
    '@' (64) 31 32
    '[' (91) 41 42 105 112
    ']' (93) 41 42 105 112
    '{' (123) 51 52 53
    '|' (124) 92
    '}' (125) 51 52 53
    error (256)
    tINTEGER <i> (258) 81
    tFOREIGN <i> (259) 13 20 21 22
    tUSE <i> (260) 12
    tPUBLIC <i> (261) 8 9 10 11 17 18 19
    tPRIVATE <i> (262)
    tREAL <d> (263) 82
    tIDENTIFIER <s> (264) 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 37 111
    tSTRING <s> (265) 113 114
    tBEGIN <s> (266) 3
    tEND <s> (267) 3
    tINT_TYPE <type> (268) 38
    tREAL_TYPE <type> (269) 39
    tSTRING_TYPE <type> (270) 40
    tVOID_TYPE <type> (271) 44
    tVAR <type> (272) 10 16 18 21 24
    tWHILE (273) 71
    tDO (274) 71
    tIF (275) 67 68 69 70
    tTHEN (276) 69 70 75 76
    tELSE (277) 74
    tELIF (278) 75 76
    tWRITE (279) 58
    tWRITELN (280) 59
    tINPUT (281) 107
    tSTOP (282) 61
    tAGAIN (283) 60
    tRETURN (284) 62 63 73
    tRETURN_TYPE (285) 25 26 27 28 65 66 67 68
    tSIZEOF (286) 104
    tNULL (287) 84
    tNOT (288) 100
    tUNARY (289)
    tCHANGE (290) 65 66
    tWITH (291) 65 66 67 68
    tDOTS (292) 65 66 67 68
    tSWEEP (293) 67 68
    tEQ (294) 99
    tNE (295) 98
    tGE (296) 96
    tLE (297) 97


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    file <sequence> (65)
        on left: 1 2
        on right: 0
    program <node> (66)
        on left: 3
        on right: 1 2
    decls <sequence> (67)
        on left: 4 5
        on right: 2 5 52 53
    decl <node> (68)
        on left: 6 7
        on right: 4 5
    vardecl <node> (69)
        on left: 8 9 10 11 12 13 14 15 16
        on right: 6
    fundecl <node> (70)
        on left: 17 18 19 20 21 22 23 24
        on right: 7
    fun_def <expression> (71)
        on left: 25 26 27 28
        on right: 33 34 73 109
    fun_call <expression> (72)
        on left: 29 30 31 32 33 34
        on right: 108
    vars <sequence> (73)
        on left: 35 36
        on right: 25 27 36
    var <node> (74)
        on left: 37
        on right: 14 35 36
    type <type> (75)
        on left: 38 39 40 41 42 43
        on right: 8 9 12 13 15 17 20 23 25 26 37 41 45 46 49 50
    type_void <type> (76)
        on left: 44
        on right: 27 28 42 47 48
    type_func <type> (77)
        on left: 45 46 47 48
        on right: 43
    args <iotypes> (78)
        on left: 49 50
        on right: 45 47 50
    block <block> (79)
        on left: 51 52 53
        on right: 3 25 26 27 28 69 70 71 74 75 76
    instrs <sequence> (80)
        on left: 54 55 56 57
        on right: 51 53 56 57
    instr <node> (81)
        on left: 58 59 60 61 62 63 64 65 66 67 68
        on right: 54 56
    block_instr <node> (82)
        on left: 69 70 71 72 73
        on right: 55 57
    elif <node> (83)
        on left: 74 75 76
        on right: 70 76
    exprs <sequence> (84)
        on left: 77 78 79 80
        on right: 29 31 33 58 59 78 80
    expr <expression> (85)
        on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 9 10 11 15 16 29 30 62 64 65 66 67 68 69 70 71 75 76 77 78 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 112
    block_expr <expression> (86)
        on left: 109 110
        on right: 17 18 19 20 21 22 23 24 66 68 72 79 80 110
    lval <lvalue> (87)
        on left: 111 112
        on right: 72 85 86 106 110
    string <s> (88)
        on left: 113 114
        on right: 83 114


State 0

    0 $accept: . file $end

    tFOREIGN      shift, and go to state 1
    tUSE          shift, and go to state 2
    tPUBLIC       shift, and go to state 3
    tBEGIN        shift, and go to state 4
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tVAR          shift, and go to state 9
    '['           shift, and go to state 10

    file       go to state 11
    program    go to state 12
    decls      go to state 13
    decl       go to state 14
    vardecl    go to state 15
    fundecl    go to state 16
    var        go to state 17
    type       go to state 18
    type_void  go to state 19
    type_func  go to state 20


State 1

   13 vardecl: tFOREIGN . type tIDENTIFIER
   20 fundecl: tFOREIGN . type tIDENTIFIER '=' block_expr
   21        | tFOREIGN . tVAR tIDENTIFIER '=' block_expr
   22        | tFOREIGN . tIDENTIFIER '=' block_expr

    tIDENTIFIER   shift, and go to state 21
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tVAR          shift, and go to state 22
    '['           shift, and go to state 10

    type       go to state 23
    type_void  go to state 19
    type_func  go to state 20


State 2

   12 vardecl: tUSE . type tIDENTIFIER

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '['           shift, and go to state 10

    type       go to state 24
    type_void  go to state 19
    type_func  go to state 20


State 3

    8 vardecl: tPUBLIC . type tIDENTIFIER
    9        | tPUBLIC . type tIDENTIFIER '=' expr
   10        | tPUBLIC . tVAR tIDENTIFIER '=' expr
   11        | tPUBLIC . tIDENTIFIER '=' expr
   17 fundecl: tPUBLIC . type tIDENTIFIER '=' block_expr
   18        | tPUBLIC . tVAR tIDENTIFIER '=' block_expr
   19        | tPUBLIC . tIDENTIFIER '=' block_expr

    tIDENTIFIER   shift, and go to state 25
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tVAR          shift, and go to state 26
    '['           shift, and go to state 10

    type       go to state 27
    type_void  go to state 19
    type_func  go to state 20


State 4

    3 program: tBEGIN . block tEND

    '{'  shift, and go to state 28

    block  go to state 29


State 5

   38 type: tINT_TYPE .

    $default  reduce using rule 38 (type)


State 6

   39 type: tREAL_TYPE .

    $default  reduce using rule 39 (type)


State 7

   40 type: tSTRING_TYPE .

    $default  reduce using rule 40 (type)


State 8

   44 type_void: tVOID_TYPE .

    $default  reduce using rule 44 (type_void)


State 9

   16 vardecl: tVAR . tIDENTIFIER '=' expr
   24 fundecl: tVAR . tIDENTIFIER '=' block_expr

    tIDENTIFIER  shift, and go to state 30


State 10

   41 type: '[' . type ']'
   42     | '[' . type_void ']'

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '['           shift, and go to state 10

    type       go to state 31
    type_void  go to state 32
    type_func  go to state 20


State 11

    0 $accept: file . $end

    $end  shift, and go to state 33


State 12

    1 file: program .

    $default  reduce using rule 1 (file)


State 13

    2 file: decls . program
    5 decls: decls . decl

    tFOREIGN      shift, and go to state 1
    tUSE          shift, and go to state 2
    tPUBLIC       shift, and go to state 3
    tBEGIN        shift, and go to state 4
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tVAR          shift, and go to state 9
    '['           shift, and go to state 10

    program    go to state 34
    decl       go to state 35
    vardecl    go to state 15
    fundecl    go to state 16
    var        go to state 17
    type       go to state 18
    type_void  go to state 19
    type_func  go to state 20


State 14

    4 decls: decl .

    $default  reduce using rule 4 (decls)


State 15

    6 decl: vardecl . ';'

    ';'  shift, and go to state 36


State 16

    7 decl: fundecl .

    $default  reduce using rule 7 (decl)


State 17

   14 vardecl: var .

    $default  reduce using rule 14 (vardecl)


State 18

   15 vardecl: type . tIDENTIFIER '=' expr
   23 fundecl: type . tIDENTIFIER '=' block_expr
   37 var: type . tIDENTIFIER
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    tIDENTIFIER  shift, and go to state 37
    '<'          shift, and go to state 38


State 19

   47 type_func: type_void . '<' args '>'
   48          | type_void . '<' '>'

    '<'  shift, and go to state 39


State 20

   43 type: type_func .

    $default  reduce using rule 43 (type)


State 21

   22 fundecl: tFOREIGN tIDENTIFIER . '=' block_expr

    '='  shift, and go to state 40


State 22

   21 fundecl: tFOREIGN tVAR . tIDENTIFIER '=' block_expr

    tIDENTIFIER  shift, and go to state 41


State 23

   13 vardecl: tFOREIGN type . tIDENTIFIER
   20 fundecl: tFOREIGN type . tIDENTIFIER '=' block_expr
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    tIDENTIFIER  shift, and go to state 42
    '<'          shift, and go to state 38


State 24

   12 vardecl: tUSE type . tIDENTIFIER
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    tIDENTIFIER  shift, and go to state 43
    '<'          shift, and go to state 38


State 25

   11 vardecl: tPUBLIC tIDENTIFIER . '=' expr
   19 fundecl: tPUBLIC tIDENTIFIER . '=' block_expr

    '='  shift, and go to state 44


State 26

   10 vardecl: tPUBLIC tVAR . tIDENTIFIER '=' expr
   18 fundecl: tPUBLIC tVAR . tIDENTIFIER '=' block_expr

    tIDENTIFIER  shift, and go to state 45


State 27

    8 vardecl: tPUBLIC type . tIDENTIFIER
    9        | tPUBLIC type . tIDENTIFIER '=' expr
   17 fundecl: tPUBLIC type . tIDENTIFIER '=' block_expr
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    tIDENTIFIER  shift, and go to state 46
    '<'          shift, and go to state 38


State 28

   51 block: '{' . instrs '}'
   52      | '{' . decls '}'
   53      | '{' . decls instrs '}'

    tINTEGER      shift, and go to state 47
    tFOREIGN      shift, and go to state 1
    tUSE          shift, and go to state 2
    tPUBLIC       shift, and go to state 3
    tREAL         shift, and go to state 48
    tIDENTIFIER   shift, and go to state 49
    tSTRING       shift, and go to state 50
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tVAR          shift, and go to state 9
    tWHILE        shift, and go to state 51
    tIF           shift, and go to state 52
    tWRITE        shift, and go to state 53
    tWRITELN      shift, and go to state 54
    tINPUT        shift, and go to state 55
    tSTOP         shift, and go to state 56
    tAGAIN        shift, and go to state 57
    tRETURN       shift, and go to state 58
    tSIZEOF       shift, and go to state 59
    tNULL         shift, and go to state 60
    tNOT          shift, and go to state 61
    tWITH         shift, and go to state 62
    tSWEEP        shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '('           shift, and go to state 66
    '['           shift, and go to state 67
    '@'           shift, and go to state 68

    decls        go to state 69
    decl         go to state 14
    vardecl      go to state 15
    fundecl      go to state 16
    fun_call     go to state 70
    var          go to state 17
    type         go to state 18
    type_void    go to state 19
    type_func    go to state 20
    instrs       go to state 71
    instr        go to state 72
    block_instr  go to state 73
    expr         go to state 74
    lval         go to state 75
    string       go to state 76


State 29

    3 program: tBEGIN block . tEND

    tEND  shift, and go to state 77


State 30

   16 vardecl: tVAR tIDENTIFIER . '=' expr
   24 fundecl: tVAR tIDENTIFIER . '=' block_expr

    '='  shift, and go to state 78


State 31

   41 type: '[' type . ']'
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    '<'  shift, and go to state 38
    ']'  shift, and go to state 79


State 32

   42 type: '[' type_void . ']'
   47 type_func: type_void . '<' args '>'
   48          | type_void . '<' '>'

    '<'  shift, and go to state 39
    ']'  shift, and go to state 80


State 33

    0 $accept: file $end .

    $default  accept


State 34

    2 file: decls program .

    $default  reduce using rule 2 (file)


State 35

    5 decls: decls decl .

    $default  reduce using rule 5 (decls)


State 36

    6 decl: vardecl ';' .

    $default  reduce using rule 6 (decl)


State 37

   15 vardecl: type tIDENTIFIER . '=' expr
   23 fundecl: type tIDENTIFIER . '=' block_expr
   37 var: type tIDENTIFIER .

    '='  shift, and go to state 81

    $default  reduce using rule 37 (var)


State 38

   45 type_func: type '<' . args '>'
   46          | type '<' . '>'

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '>'           shift, and go to state 82
    '['           shift, and go to state 10

    type       go to state 83
    type_void  go to state 19
    type_func  go to state 20
    args       go to state 84


State 39

   47 type_func: type_void '<' . args '>'
   48          | type_void '<' . '>'

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '>'           shift, and go to state 85
    '['           shift, and go to state 10

    type       go to state 83
    type_void  go to state 19
    type_func  go to state 20
    args       go to state 86


State 40

   22 fundecl: tFOREIGN tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 90
    block_expr  go to state 91
    lval        go to state 92
    string      go to state 76


State 41

   21 fundecl: tFOREIGN tVAR tIDENTIFIER . '=' block_expr

    '='  shift, and go to state 93


State 42

   13 vardecl: tFOREIGN type tIDENTIFIER .
   20 fundecl: tFOREIGN type tIDENTIFIER . '=' block_expr

    '='  shift, and go to state 94

    $default  reduce using rule 13 (vardecl)


State 43

   12 vardecl: tUSE type tIDENTIFIER .

    $default  reduce using rule 12 (vardecl)


State 44

   11 vardecl: tPUBLIC tIDENTIFIER '=' . expr
   19 fundecl: tPUBLIC tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 95
    block_expr  go to state 96
    lval        go to state 92
    string      go to state 76


State 45

   10 vardecl: tPUBLIC tVAR tIDENTIFIER . '=' expr
   18 fundecl: tPUBLIC tVAR tIDENTIFIER . '=' block_expr

    '='  shift, and go to state 97


State 46

    8 vardecl: tPUBLIC type tIDENTIFIER .
    9        | tPUBLIC type tIDENTIFIER . '=' expr
   17 fundecl: tPUBLIC type tIDENTIFIER . '=' block_expr

    '='  shift, and go to state 98

    $default  reduce using rule 8 (vardecl)


State 47

   81 expr: tINTEGER .

    $default  reduce using rule 81 (expr)


State 48

   82 expr: tREAL .

    $default  reduce using rule 82 (expr)


State 49

  111 lval: tIDENTIFIER .

    $default  reduce using rule 111 (lval)


State 50

  113 string: tSTRING .

    $default  reduce using rule 113 (string)


State 51

   71 block_instr: tWHILE . '(' expr ')' tDO block

    '('  shift, and go to state 99


State 52

   69 block_instr: tIF . '(' expr ')' tTHEN block
   70            | tIF . '(' expr ')' tTHEN block elif

    '('  shift, and go to state 100


State 53

   58 instr: tWRITE . exprs

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    exprs       go to state 101
    expr        go to state 102
    block_expr  go to state 103
    lval        go to state 92
    string      go to state 76


State 54

   59 instr: tWRITELN . exprs

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    exprs       go to state 104
    expr        go to state 102
    block_expr  go to state 103
    lval        go to state 92
    string      go to state 76


State 55

  107 expr: tINPUT .

    $default  reduce using rule 107 (expr)


State 56

   61 instr: tSTOP .

    $default  reduce using rule 61 (instr)


State 57

   60 instr: tAGAIN .

    $default  reduce using rule 60 (instr)


State 58

   62 instr: tRETURN . expr
   63      | tRETURN .
   73 block_instr: tRETURN . fun_def

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    $default  reduce using rule 63 (instr)

    fun_def   go to state 105
    fun_call  go to state 70
    expr      go to state 106
    lval      go to state 107
    string    go to state 76


State 59

  104 expr: tSIZEOF . '(' expr ')'

    '('  shift, and go to state 108


State 60

   84 expr: tNULL .

    $default  reduce using rule 84 (expr)


State 61

  100 expr: tNOT . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 109
    lval      go to state 107
    string    go to state 76


State 62

   65 instr: tWITH . expr tCHANGE expr tRETURN_TYPE expr tDOTS expr
   66      | tWITH . block_expr tCHANGE expr tRETURN_TYPE expr tDOTS expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 110
    block_expr  go to state 111
    lval        go to state 92
    string      go to state 76


State 63

   67 instr: tSWEEP . expr tRETURN_TYPE expr tDOTS expr tWITH expr tIF expr
   68      | tSWEEP . expr tRETURN_TYPE expr tDOTS expr tWITH block_expr tIF expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 112
    lval      go to state 107
    string    go to state 76


State 64

  101 expr: '+' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 113
    lval      go to state 107
    string    go to state 76


State 65

  102 expr: '-' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 114
    lval      go to state 107
    string    go to state 76


State 66

   33 fun_call: '(' . fun_def ')' '(' exprs ')'
   34         | '(' . fun_def ')' '(' ')'
  103 expr: '(' . expr ')'

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def   go to state 115
    fun_call  go to state 70
    expr      go to state 116
    lval      go to state 107
    string    go to state 76


State 67

   41 type: '[' . type ']'
   42     | '[' . type_void ']'
  105 expr: '[' . expr ']'

    tINTEGER      shift, and go to state 47
    tREAL         shift, and go to state 48
    tIDENTIFIER   shift, and go to state 49
    tSTRING       shift, and go to state 50
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tINPUT        shift, and go to state 55
    tSIZEOF       shift, and go to state 59
    tNULL         shift, and go to state 60
    tNOT          shift, and go to state 61
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '('           shift, and go to state 66
    '['           shift, and go to state 67
    '@'           shift, and go to state 68

    fun_call   go to state 70
    type       go to state 31
    type_void  go to state 32
    type_func  go to state 20
    expr       go to state 117
    lval       go to state 107
    string     go to state 76


State 68

   31 fun_call: '@' . '(' exprs ')'
   32         | '@' . '(' ')'

    '('  shift, and go to state 118


State 69

    5 decls: decls . decl
   52 block: '{' decls . '}'
   53      | '{' decls . instrs '}'

    tINTEGER      shift, and go to state 47
    tFOREIGN      shift, and go to state 1
    tUSE          shift, and go to state 2
    tPUBLIC       shift, and go to state 3
    tREAL         shift, and go to state 48
    tIDENTIFIER   shift, and go to state 49
    tSTRING       shift, and go to state 50
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tVAR          shift, and go to state 9
    tWHILE        shift, and go to state 51
    tIF           shift, and go to state 52
    tWRITE        shift, and go to state 53
    tWRITELN      shift, and go to state 54
    tINPUT        shift, and go to state 55
    tSTOP         shift, and go to state 56
    tAGAIN        shift, and go to state 57
    tRETURN       shift, and go to state 58
    tSIZEOF       shift, and go to state 59
    tNULL         shift, and go to state 60
    tNOT          shift, and go to state 61
    tWITH         shift, and go to state 62
    tSWEEP        shift, and go to state 63
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '('           shift, and go to state 66
    '['           shift, and go to state 67
    '@'           shift, and go to state 68
    '}'           shift, and go to state 119

    decl         go to state 35
    vardecl      go to state 15
    fundecl      go to state 16
    fun_call     go to state 70
    var          go to state 17
    type         go to state 18
    type_void    go to state 19
    type_func    go to state 20
    instrs       go to state 120
    instr        go to state 72
    block_instr  go to state 73
    expr         go to state 74
    lval         go to state 75
    string       go to state 76


State 70

  108 expr: fun_call .

    $default  reduce using rule 108 (expr)


State 71

   51 block: '{' instrs . '}'

    '}'  shift, and go to state 121


State 72

   54 instrs: instr .
   56       | instr . ';' instrs

    ';'  shift, and go to state 122

    $default  reduce using rule 54 (instrs)


State 73

   55 instrs: block_instr .
   57       | block_instr . instrs

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tWHILE       shift, and go to state 51
    tIF          shift, and go to state 52
    tWRITE       shift, and go to state 53
    tWRITELN     shift, and go to state 54
    tINPUT       shift, and go to state 55
    tSTOP        shift, and go to state 56
    tAGAIN       shift, and go to state 57
    tRETURN      shift, and go to state 58
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    tWITH        shift, and go to state 62
    tSWEEP       shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    $default  reduce using rule 55 (instrs)

    fun_call     go to state 70
    instrs       go to state 123
    instr        go to state 72
    block_instr  go to state 73
    expr         go to state 74
    lval         go to state 75
    string       go to state 76


State 74

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   64 instr: expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 64 (instr)


State 75

   72 block_instr: lval . '=' block_expr
   85 expr: lval .
   86     | lval . '=' expr
  106     | lval . '?'

    '='  shift, and go to state 139
    '?'  shift, and go to state 140

    $default  reduce using rule 85 (expr)


State 76

   83 expr: string .
  114 string: string . tSTRING

    tSTRING  shift, and go to state 141

    $default  reduce using rule 83 (expr)


State 77

    3 program: tBEGIN block tEND .

    $default  reduce using rule 3 (program)


State 78

   16 vardecl: tVAR tIDENTIFIER '=' . expr
   24 fundecl: tVAR tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 142
    block_expr  go to state 143
    lval        go to state 92
    string      go to state 76


State 79

   41 type: '[' type ']' .

    $default  reduce using rule 41 (type)


State 80

   42 type: '[' type_void ']' .

    $default  reduce using rule 42 (type)


State 81

   15 vardecl: type tIDENTIFIER '=' . expr
   23 fundecl: type tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 144
    block_expr  go to state 145
    lval        go to state 92
    string      go to state 76


State 82

   46 type_func: type '<' '>' .

    $default  reduce using rule 46 (type_func)


State 83

   45 type_func: type . '<' args '>'
   46          | type . '<' '>'
   49 args: type .
   50     | type . ',' args

    '<'  shift, and go to state 38
    ','  shift, and go to state 146

    $default  reduce using rule 49 (args)


State 84

   45 type_func: type '<' args . '>'

    '>'  shift, and go to state 147


State 85

   48 type_func: type_void '<' '>' .

    $default  reduce using rule 48 (type_func)


State 86

   47 type_func: type_void '<' args . '>'

    '>'  shift, and go to state 148


State 87

   25 fun_def: '(' . vars ')' tRETURN_TYPE type ':' block
   26        | '(' . ')' tRETURN_TYPE type ':' block
   27        | '(' . vars ')' tRETURN_TYPE type_void ':' block
   28        | '(' . ')' tRETURN_TYPE type_void ':' block
   33 fun_call: '(' . fun_def ')' '(' exprs ')'
   34         | '(' . fun_def ')' '(' ')'
  103 expr: '(' . expr ')'

    tINTEGER      shift, and go to state 47
    tREAL         shift, and go to state 48
    tIDENTIFIER   shift, and go to state 49
    tSTRING       shift, and go to state 50
    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    tINPUT        shift, and go to state 55
    tSIZEOF       shift, and go to state 59
    tNULL         shift, and go to state 60
    tNOT          shift, and go to state 61
    '+'           shift, and go to state 64
    '-'           shift, and go to state 65
    '('           shift, and go to state 87
    '['           shift, and go to state 67
    ')'           shift, and go to state 149
    '@'           shift, and go to state 68

    fun_def    go to state 115
    fun_call   go to state 70
    vars       go to state 150
    var        go to state 151
    type       go to state 152
    type_void  go to state 19
    type_func  go to state 20
    expr       go to state 116
    lval       go to state 107
    string     go to state 76


State 88

  105 expr: '[' . expr ']'

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 117
    lval      go to state 107
    string    go to state 76


State 89

  109 block_expr: fun_def .

    $default  reduce using rule 109 (block_expr)


State 90

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138


State 91

   22 fundecl: tFOREIGN tIDENTIFIER '=' block_expr .

    $default  reduce using rule 22 (fundecl)


State 92

   85 expr: lval .
   86     | lval . '=' expr
  106     | lval . '?'
  110 block_expr: lval . '=' block_expr

    '='  shift, and go to state 153
    '?'  shift, and go to state 140

    $default  reduce using rule 85 (expr)


State 93

   21 fundecl: tFOREIGN tVAR tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 90
    block_expr  go to state 154
    lval        go to state 92
    string      go to state 76


State 94

   20 fundecl: tFOREIGN type tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 90
    block_expr  go to state 155
    lval        go to state 92
    string      go to state 76


State 95

   11 vardecl: tPUBLIC tIDENTIFIER '=' expr .
   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 11 (vardecl)


State 96

   19 fundecl: tPUBLIC tIDENTIFIER '=' block_expr .

    $default  reduce using rule 19 (fundecl)


State 97

   10 vardecl: tPUBLIC tVAR tIDENTIFIER '=' . expr
   18 fundecl: tPUBLIC tVAR tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 156
    block_expr  go to state 157
    lval        go to state 92
    string      go to state 76


State 98

    9 vardecl: tPUBLIC type tIDENTIFIER '=' . expr
   17 fundecl: tPUBLIC type tIDENTIFIER '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 158
    block_expr  go to state 159
    lval        go to state 92
    string      go to state 76


State 99

   71 block_instr: tWHILE '(' . expr ')' tDO block

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 160
    lval      go to state 107
    string    go to state 76


State 100

   69 block_instr: tIF '(' . expr ')' tTHEN block
   70            | tIF '(' . expr ')' tTHEN block elif

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 161
    lval      go to state 107
    string    go to state 76


State 101

   58 instr: tWRITE exprs .
   78 exprs: exprs . ',' expr
   80      | exprs . ',' block_expr

    ','  shift, and go to state 162

    $default  reduce using rule 58 (instr)


State 102

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   77 exprs: expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 77 (exprs)


State 103

   79 exprs: block_expr .

    $default  reduce using rule 79 (exprs)


State 104

   59 instr: tWRITELN exprs .
   78 exprs: exprs . ',' expr
   80      | exprs . ',' block_expr

    ','  shift, and go to state 162

    $default  reduce using rule 59 (instr)


State 105

   73 block_instr: tRETURN fun_def .

    $default  reduce using rule 73 (block_instr)


State 106

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   62 instr: tRETURN expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 62 (instr)


State 107

   85 expr: lval .
   86     | lval . '=' expr
  106     | lval . '?'

    '='  shift, and go to state 163
    '?'  shift, and go to state 140

    $default  reduce using rule 85 (expr)


State 108

  104 expr: tSIZEOF '(' . expr ')'

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 164
    lval      go to state 107
    string    go to state 76


State 109

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  100     | tNOT expr .
  112 lval: expr . '[' expr ']'

    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 100 (expr)


State 110

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   65 instr: tWITH expr . tCHANGE expr tRETURN_TYPE expr tDOTS expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tCHANGE  shift, and go to state 165
    '|'      shift, and go to state 124
    '&'      shift, and go to state 125
    tEQ      shift, and go to state 126
    tNE      shift, and go to state 127
    '<'      shift, and go to state 128
    '>'      shift, and go to state 129
    tGE      shift, and go to state 130
    tLE      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133
    '*'      shift, and go to state 134
    '/'      shift, and go to state 135
    '%'      shift, and go to state 136
    '('      shift, and go to state 137
    '['      shift, and go to state 138


State 111

   66 instr: tWITH block_expr . tCHANGE expr tRETURN_TYPE expr tDOTS expr

    tCHANGE  shift, and go to state 166


State 112

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   67 instr: tSWEEP expr . tRETURN_TYPE expr tDOTS expr tWITH expr tIF expr
   68      | tSWEEP expr . tRETURN_TYPE expr tDOTS expr tWITH block_expr tIF expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tRETURN_TYPE  shift, and go to state 167
    '|'           shift, and go to state 124
    '&'           shift, and go to state 125
    tEQ           shift, and go to state 126
    tNE           shift, and go to state 127
    '<'           shift, and go to state 128
    '>'           shift, and go to state 129
    tGE           shift, and go to state 130
    tLE           shift, and go to state 131
    '+'           shift, and go to state 132
    '-'           shift, and go to state 133
    '*'           shift, and go to state 134
    '/'           shift, and go to state 135
    '%'           shift, and go to state 136
    '('           shift, and go to state 137
    '['           shift, and go to state 138


State 113

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  101     | '+' expr .
  112 lval: expr . '[' expr ']'

    $default  reduce using rule 101 (expr)


State 114

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  102     | '-' expr .
  112 lval: expr . '[' expr ']'

    $default  reduce using rule 102 (expr)


State 115

   33 fun_call: '(' fun_def . ')' '(' exprs ')'
   34         | '(' fun_def . ')' '(' ')'

    ')'  shift, and go to state 168


State 116

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  103     | '(' expr . ')'
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138
    ')'  shift, and go to state 169


State 117

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  105     | '[' expr . ']'
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138
    ']'  shift, and go to state 170


State 118

   31 fun_call: '@' '(' . exprs ')'
   32         | '@' '(' . ')'

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    ')'          shift, and go to state 171
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    exprs       go to state 172
    expr        go to state 102
    block_expr  go to state 103
    lval        go to state 92
    string      go to state 76


State 119

   52 block: '{' decls '}' .

    $default  reduce using rule 52 (block)


State 120

   53 block: '{' decls instrs . '}'

    '}'  shift, and go to state 173


State 121

   51 block: '{' instrs '}' .

    $default  reduce using rule 51 (block)


State 122

   56 instrs: instr ';' . instrs

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tWHILE       shift, and go to state 51
    tIF          shift, and go to state 52
    tWRITE       shift, and go to state 53
    tWRITELN     shift, and go to state 54
    tINPUT       shift, and go to state 55
    tSTOP        shift, and go to state 56
    tAGAIN       shift, and go to state 57
    tRETURN      shift, and go to state 58
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    tWITH        shift, and go to state 62
    tSWEEP       shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call     go to state 70
    instrs       go to state 174
    instr        go to state 72
    block_instr  go to state 73
    expr         go to state 74
    lval         go to state 75
    string       go to state 76


State 123

   57 instrs: block_instr instrs .

    $default  reduce using rule 57 (instrs)


State 124

   92 expr: expr '|' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 175
    lval      go to state 107
    string    go to state 76


State 125

   93 expr: expr '&' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 176
    lval      go to state 107
    string    go to state 76


State 126

   99 expr: expr tEQ . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 177
    lval      go to state 107
    string    go to state 76


State 127

   98 expr: expr tNE . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 178
    lval      go to state 107
    string    go to state 76


State 128

   94 expr: expr '<' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 179
    lval      go to state 107
    string    go to state 76


State 129

   95 expr: expr '>' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 180
    lval      go to state 107
    string    go to state 76


State 130

   96 expr: expr tGE . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 181
    lval      go to state 107
    string    go to state 76


State 131

   97 expr: expr tLE . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 182
    lval      go to state 107
    string    go to state 76


State 132

   87 expr: expr '+' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 183
    lval      go to state 107
    string    go to state 76


State 133

   88 expr: expr '-' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 184
    lval      go to state 107
    string    go to state 76


State 134

   89 expr: expr '*' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 185
    lval      go to state 107
    string    go to state 76


State 135

   90 expr: expr '/' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 186
    lval      go to state 107
    string    go to state 76


State 136

   91 expr: expr '%' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 187
    lval      go to state 107
    string    go to state 76


State 137

   29 fun_call: expr '(' . exprs ')'
   30         | expr '(' . ')'

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    ')'          shift, and go to state 188
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    exprs       go to state 189
    expr        go to state 102
    block_expr  go to state 103
    lval        go to state 92
    string      go to state 76


State 138

  112 lval: expr '[' . expr ']'

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 190
    lval      go to state 107
    string    go to state 76


State 139

   72 block_instr: lval '=' . block_expr
   86 expr: lval '=' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 191
    block_expr  go to state 192
    lval        go to state 92
    string      go to state 76


State 140

  106 expr: lval '?' .

    $default  reduce using rule 106 (expr)


State 141

  114 string: string tSTRING .

    $default  reduce using rule 114 (string)


State 142

   16 vardecl: tVAR tIDENTIFIER '=' expr .
   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 16 (vardecl)


State 143

   24 fundecl: tVAR tIDENTIFIER '=' block_expr .

    $default  reduce using rule 24 (fundecl)


State 144

   15 vardecl: type tIDENTIFIER '=' expr .
   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 15 (vardecl)


State 145

   23 fundecl: type tIDENTIFIER '=' block_expr .

    $default  reduce using rule 23 (fundecl)


State 146

   50 args: type ',' . args

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '['           shift, and go to state 10

    type       go to state 83
    type_void  go to state 19
    type_func  go to state 20
    args       go to state 193


State 147

   45 type_func: type '<' args '>' .

    $default  reduce using rule 45 (type_func)


State 148

   47 type_func: type_void '<' args '>' .

    $default  reduce using rule 47 (type_func)


State 149

   26 fun_def: '(' ')' . tRETURN_TYPE type ':' block
   28        | '(' ')' . tRETURN_TYPE type_void ':' block

    tRETURN_TYPE  shift, and go to state 194


State 150

   25 fun_def: '(' vars . ')' tRETURN_TYPE type ':' block
   27        | '(' vars . ')' tRETURN_TYPE type_void ':' block

    ')'  shift, and go to state 195


State 151

   35 vars: var .
   36     | var . ',' vars

    ','  shift, and go to state 196

    $default  reduce using rule 35 (vars)


State 152

   37 var: type . tIDENTIFIER
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    tIDENTIFIER  shift, and go to state 197
    '<'          shift, and go to state 38


State 153

   86 expr: lval '=' . expr
  110 block_expr: lval '=' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 191
    block_expr  go to state 198
    lval        go to state 92
    string      go to state 76


State 154

   21 fundecl: tFOREIGN tVAR tIDENTIFIER '=' block_expr .

    $default  reduce using rule 21 (fundecl)


State 155

   20 fundecl: tFOREIGN type tIDENTIFIER '=' block_expr .

    $default  reduce using rule 20 (fundecl)


State 156

   10 vardecl: tPUBLIC tVAR tIDENTIFIER '=' expr .
   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 10 (vardecl)


State 157

   18 fundecl: tPUBLIC tVAR tIDENTIFIER '=' block_expr .

    $default  reduce using rule 18 (fundecl)


State 158

    9 vardecl: tPUBLIC type tIDENTIFIER '=' expr .
   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 9 (vardecl)


State 159

   17 fundecl: tPUBLIC type tIDENTIFIER '=' block_expr .

    $default  reduce using rule 17 (fundecl)


State 160

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   71 block_instr: tWHILE '(' expr . ')' tDO block
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138
    ')'  shift, and go to state 199


State 161

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   69 block_instr: tIF '(' expr . ')' tTHEN block
   70            | tIF '(' expr . ')' tTHEN block elif
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138
    ')'  shift, and go to state 200


State 162

   78 exprs: exprs ',' . expr
   80      | exprs ',' . block_expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 201
    block_expr  go to state 202
    lval        go to state 92
    string      go to state 76


State 163

   86 expr: lval '=' . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 191
    lval      go to state 107
    string    go to state 76


State 164

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  104     | tSIZEOF '(' expr . ')'
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138
    ')'  shift, and go to state 203


State 165

   65 instr: tWITH expr tCHANGE . expr tRETURN_TYPE expr tDOTS expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 204
    lval      go to state 107
    string    go to state 76


State 166

   66 instr: tWITH block_expr tCHANGE . expr tRETURN_TYPE expr tDOTS expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 205
    lval      go to state 107
    string    go to state 76


State 167

   67 instr: tSWEEP expr tRETURN_TYPE . expr tDOTS expr tWITH expr tIF expr
   68      | tSWEEP expr tRETURN_TYPE . expr tDOTS expr tWITH block_expr tIF expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 206
    lval      go to state 107
    string    go to state 76


State 168

   33 fun_call: '(' fun_def ')' . '(' exprs ')'
   34         | '(' fun_def ')' . '(' ')'

    '('  shift, and go to state 207


State 169

  103 expr: '(' expr ')' .

    $default  reduce using rule 103 (expr)


State 170

  105 expr: '[' expr ']' .

    $default  reduce using rule 105 (expr)


State 171

   32 fun_call: '@' '(' ')' .

    $default  reduce using rule 32 (fun_call)


State 172

   31 fun_call: '@' '(' exprs . ')'
   78 exprs: exprs . ',' expr
   80      | exprs . ',' block_expr

    ')'  shift, and go to state 208
    ','  shift, and go to state 162


State 173

   53 block: '{' decls instrs '}' .

    $default  reduce using rule 53 (block)


State 174

   56 instrs: instr ';' instrs .

    $default  reduce using rule 56 (instrs)


State 175

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   92     | expr '|' expr .
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 92 (expr)


State 176

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   93     | expr '&' expr .
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 93 (expr)


State 177

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
   99     | expr tEQ expr .
  112 lval: expr . '[' expr ']'

    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 99 (expr)


State 178

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   98     | expr tNE expr .
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 98 (expr)


State 179

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   94     | expr '<' expr .
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 94 (expr)


State 180

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   95     | expr '>' expr .
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 95 (expr)


State 181

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   96     | expr tGE expr .
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 96 (expr)


State 182

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   97     | expr tLE expr .
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 97 (expr)


State 183

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   87     | expr '+' expr .
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 87 (expr)


State 184

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   88     | expr '-' expr .
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 88 (expr)


State 185

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   89     | expr '*' expr .
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 89 (expr)


State 186

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   90     | expr '/' expr .
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 90 (expr)


State 187

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   91     | expr '%' expr .
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 91 (expr)


State 188

   30 fun_call: expr '(' ')' .

    $default  reduce using rule 30 (fun_call)


State 189

   29 fun_call: expr '(' exprs . ')'
   78 exprs: exprs . ',' expr
   80      | exprs . ',' block_expr

    ')'  shift, and go to state 209
    ','  shift, and go to state 162


State 190

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'
  112     | expr '[' expr . ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138
    ']'  shift, and go to state 210


State 191

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   86 expr: lval '=' expr .
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 86 (expr)


State 192

   72 block_instr: lval '=' block_expr .

    $default  reduce using rule 72 (block_instr)


State 193

   50 args: type ',' args .

    $default  reduce using rule 50 (args)


State 194

   26 fun_def: '(' ')' tRETURN_TYPE . type ':' block
   28        | '(' ')' tRETURN_TYPE . type_void ':' block

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '['           shift, and go to state 10

    type       go to state 211
    type_void  go to state 212
    type_func  go to state 20


State 195

   25 fun_def: '(' vars ')' . tRETURN_TYPE type ':' block
   27        | '(' vars ')' . tRETURN_TYPE type_void ':' block

    tRETURN_TYPE  shift, and go to state 213


State 196

   36 vars: var ',' . vars

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '['           shift, and go to state 10

    vars       go to state 214
    var        go to state 151
    type       go to state 152
    type_void  go to state 19
    type_func  go to state 20


State 197

   37 var: type tIDENTIFIER .

    $default  reduce using rule 37 (var)


State 198

  110 block_expr: lval '=' block_expr .

    $default  reduce using rule 110 (block_expr)


State 199

   71 block_instr: tWHILE '(' expr ')' . tDO block

    tDO  shift, and go to state 215


State 200

   69 block_instr: tIF '(' expr ')' . tTHEN block
   70            | tIF '(' expr ')' . tTHEN block elif

    tTHEN  shift, and go to state 216


State 201

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   78 exprs: exprs ',' expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 78 (exprs)


State 202

   80 exprs: exprs ',' block_expr .

    $default  reduce using rule 80 (exprs)


State 203

  104 expr: tSIZEOF '(' expr ')' .

    $default  reduce using rule 104 (expr)


State 204

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   65 instr: tWITH expr tCHANGE expr . tRETURN_TYPE expr tDOTS expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tRETURN_TYPE  shift, and go to state 217
    '|'           shift, and go to state 124
    '&'           shift, and go to state 125
    tEQ           shift, and go to state 126
    tNE           shift, and go to state 127
    '<'           shift, and go to state 128
    '>'           shift, and go to state 129
    tGE           shift, and go to state 130
    tLE           shift, and go to state 131
    '+'           shift, and go to state 132
    '-'           shift, and go to state 133
    '*'           shift, and go to state 134
    '/'           shift, and go to state 135
    '%'           shift, and go to state 136
    '('           shift, and go to state 137
    '['           shift, and go to state 138


State 205

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   66 instr: tWITH block_expr tCHANGE expr . tRETURN_TYPE expr tDOTS expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tRETURN_TYPE  shift, and go to state 218
    '|'           shift, and go to state 124
    '&'           shift, and go to state 125
    tEQ           shift, and go to state 126
    tNE           shift, and go to state 127
    '<'           shift, and go to state 128
    '>'           shift, and go to state 129
    tGE           shift, and go to state 130
    tLE           shift, and go to state 131
    '+'           shift, and go to state 132
    '-'           shift, and go to state 133
    '*'           shift, and go to state 134
    '/'           shift, and go to state 135
    '%'           shift, and go to state 136
    '('           shift, and go to state 137
    '['           shift, and go to state 138


State 206

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   67 instr: tSWEEP expr tRETURN_TYPE expr . tDOTS expr tWITH expr tIF expr
   68      | tSWEEP expr tRETURN_TYPE expr . tDOTS expr tWITH block_expr tIF expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tDOTS  shift, and go to state 219
    '|'    shift, and go to state 124
    '&'    shift, and go to state 125
    tEQ    shift, and go to state 126
    tNE    shift, and go to state 127
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    tGE    shift, and go to state 130
    tLE    shift, and go to state 131
    '+'    shift, and go to state 132
    '-'    shift, and go to state 133
    '*'    shift, and go to state 134
    '/'    shift, and go to state 135
    '%'    shift, and go to state 136
    '('    shift, and go to state 137
    '['    shift, and go to state 138


State 207

   33 fun_call: '(' fun_def ')' '(' . exprs ')'
   34         | '(' fun_def ')' '(' . ')'

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    ')'          shift, and go to state 220
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    exprs       go to state 221
    expr        go to state 102
    block_expr  go to state 103
    lval        go to state 92
    string      go to state 76


State 208

   31 fun_call: '@' '(' exprs ')' .

    $default  reduce using rule 31 (fun_call)


State 209

   29 fun_call: expr '(' exprs ')' .

    $default  reduce using rule 29 (fun_call)


State 210

  112 lval: expr '[' expr ']' .

    $default  reduce using rule 112 (lval)


State 211

   26 fun_def: '(' ')' tRETURN_TYPE type . ':' block
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    '<'  shift, and go to state 38
    ':'  shift, and go to state 222


State 212

   28 fun_def: '(' ')' tRETURN_TYPE type_void . ':' block
   47 type_func: type_void . '<' args '>'
   48          | type_void . '<' '>'

    '<'  shift, and go to state 39
    ':'  shift, and go to state 223


State 213

   25 fun_def: '(' vars ')' tRETURN_TYPE . type ':' block
   27        | '(' vars ')' tRETURN_TYPE . type_void ':' block

    tINT_TYPE     shift, and go to state 5
    tREAL_TYPE    shift, and go to state 6
    tSTRING_TYPE  shift, and go to state 7
    tVOID_TYPE    shift, and go to state 8
    '['           shift, and go to state 10

    type       go to state 224
    type_void  go to state 225
    type_func  go to state 20


State 214

   36 vars: var ',' vars .

    $default  reduce using rule 36 (vars)


State 215

   71 block_instr: tWHILE '(' expr ')' tDO . block

    '{'  shift, and go to state 28

    block  go to state 226


State 216

   69 block_instr: tIF '(' expr ')' tTHEN . block
   70            | tIF '(' expr ')' tTHEN . block elif

    '{'  shift, and go to state 28

    block  go to state 227


State 217

   65 instr: tWITH expr tCHANGE expr tRETURN_TYPE . expr tDOTS expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 228
    lval      go to state 107
    string    go to state 76


State 218

   66 instr: tWITH block_expr tCHANGE expr tRETURN_TYPE . expr tDOTS expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 229
    lval      go to state 107
    string    go to state 76


State 219

   67 instr: tSWEEP expr tRETURN_TYPE expr tDOTS . expr tWITH expr tIF expr
   68      | tSWEEP expr tRETURN_TYPE expr tDOTS . expr tWITH block_expr tIF expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 230
    lval      go to state 107
    string    go to state 76


State 220

   34 fun_call: '(' fun_def ')' '(' ')' .

    $default  reduce using rule 34 (fun_call)


State 221

   33 fun_call: '(' fun_def ')' '(' exprs . ')'
   78 exprs: exprs . ',' expr
   80      | exprs . ',' block_expr

    ')'  shift, and go to state 231
    ','  shift, and go to state 162


State 222

   26 fun_def: '(' ')' tRETURN_TYPE type ':' . block

    '{'  shift, and go to state 28

    block  go to state 232


State 223

   28 fun_def: '(' ')' tRETURN_TYPE type_void ':' . block

    '{'  shift, and go to state 28

    block  go to state 233


State 224

   25 fun_def: '(' vars ')' tRETURN_TYPE type . ':' block
   45 type_func: type . '<' args '>'
   46          | type . '<' '>'

    '<'  shift, and go to state 38
    ':'  shift, and go to state 234


State 225

   27 fun_def: '(' vars ')' tRETURN_TYPE type_void . ':' block
   47 type_func: type_void . '<' args '>'
   48          | type_void . '<' '>'

    '<'  shift, and go to state 39
    ':'  shift, and go to state 235


State 226

   71 block_instr: tWHILE '(' expr ')' tDO block .

    $default  reduce using rule 71 (block_instr)


State 227

   69 block_instr: tIF '(' expr ')' tTHEN block .
   70            | tIF '(' expr ')' tTHEN block . elif

    tELSE  shift, and go to state 236
    tELIF  shift, and go to state 237

    $default  reduce using rule 69 (block_instr)

    elif  go to state 238


State 228

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   65 instr: tWITH expr tCHANGE expr tRETURN_TYPE expr . tDOTS expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tDOTS  shift, and go to state 239
    '|'    shift, and go to state 124
    '&'    shift, and go to state 125
    tEQ    shift, and go to state 126
    tNE    shift, and go to state 127
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    tGE    shift, and go to state 130
    tLE    shift, and go to state 131
    '+'    shift, and go to state 132
    '-'    shift, and go to state 133
    '*'    shift, and go to state 134
    '/'    shift, and go to state 135
    '%'    shift, and go to state 136
    '('    shift, and go to state 137
    '['    shift, and go to state 138


State 229

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   66 instr: tWITH block_expr tCHANGE expr tRETURN_TYPE expr . tDOTS expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tDOTS  shift, and go to state 240
    '|'    shift, and go to state 124
    '&'    shift, and go to state 125
    tEQ    shift, and go to state 126
    tNE    shift, and go to state 127
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    tGE    shift, and go to state 130
    tLE    shift, and go to state 131
    '+'    shift, and go to state 132
    '-'    shift, and go to state 133
    '*'    shift, and go to state 134
    '/'    shift, and go to state 135
    '%'    shift, and go to state 136
    '('    shift, and go to state 137
    '['    shift, and go to state 138


State 230

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   67 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr . tWITH expr tIF expr
   68      | tSWEEP expr tRETURN_TYPE expr tDOTS expr . tWITH block_expr tIF expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tWITH  shift, and go to state 241
    '|'    shift, and go to state 124
    '&'    shift, and go to state 125
    tEQ    shift, and go to state 126
    tNE    shift, and go to state 127
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    tGE    shift, and go to state 130
    tLE    shift, and go to state 131
    '+'    shift, and go to state 132
    '-'    shift, and go to state 133
    '*'    shift, and go to state 134
    '/'    shift, and go to state 135
    '%'    shift, and go to state 136
    '('    shift, and go to state 137
    '['    shift, and go to state 138


State 231

   33 fun_call: '(' fun_def ')' '(' exprs ')' .

    $default  reduce using rule 33 (fun_call)


State 232

   26 fun_def: '(' ')' tRETURN_TYPE type ':' block .

    $default  reduce using rule 26 (fun_def)


State 233

   28 fun_def: '(' ')' tRETURN_TYPE type_void ':' block .

    $default  reduce using rule 28 (fun_def)


State 234

   25 fun_def: '(' vars ')' tRETURN_TYPE type ':' . block

    '{'  shift, and go to state 28

    block  go to state 242


State 235

   27 fun_def: '(' vars ')' tRETURN_TYPE type_void ':' . block

    '{'  shift, and go to state 28

    block  go to state 243


State 236

   74 elif: tELSE . block

    '{'  shift, and go to state 28

    block  go to state 244


State 237

   75 elif: tELIF . '(' expr ')' tTHEN block
   76     | tELIF . '(' expr ')' tTHEN block elif

    '('  shift, and go to state 245


State 238

   70 block_instr: tIF '(' expr ')' tTHEN block elif .

    $default  reduce using rule 70 (block_instr)


State 239

   65 instr: tWITH expr tCHANGE expr tRETURN_TYPE expr tDOTS . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 246
    lval      go to state 107
    string    go to state 76


State 240

   66 instr: tWITH block_expr tCHANGE expr tRETURN_TYPE expr tDOTS . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 247
    lval      go to state 107
    string    go to state 76


State 241

   67 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH . expr tIF expr
   68      | tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH . block_expr tIF expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 87
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_def     go to state 89
    fun_call    go to state 70
    expr        go to state 248
    block_expr  go to state 249
    lval        go to state 92
    string      go to state 76


State 242

   25 fun_def: '(' vars ')' tRETURN_TYPE type ':' block .

    $default  reduce using rule 25 (fun_def)


State 243

   27 fun_def: '(' vars ')' tRETURN_TYPE type_void ':' block .

    $default  reduce using rule 27 (fun_def)


State 244

   74 elif: tELSE block .

    $default  reduce using rule 74 (elif)


State 245

   75 elif: tELIF '(' . expr ')' tTHEN block
   76     | tELIF '(' . expr ')' tTHEN block elif

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 250
    lval      go to state 107
    string    go to state 76


State 246

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   65 instr: tWITH expr tCHANGE expr tRETURN_TYPE expr tDOTS expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 65 (instr)


State 247

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   66 instr: tWITH block_expr tCHANGE expr tRETURN_TYPE expr tDOTS expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 66 (instr)


State 248

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   67 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH expr . tIF expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    tIF  shift, and go to state 251
    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138


State 249

   68 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH block_expr . tIF expr

    tIF  shift, and go to state 252


State 250

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   75 elif: tELIF '(' expr . ')' tTHEN block
   76     | tELIF '(' expr . ')' tTHEN block elif
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138
    ')'  shift, and go to state 253


State 251

   67 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH expr tIF . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 254
    lval      go to state 107
    string    go to state 76


State 252

   68 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH block_expr tIF . expr

    tINTEGER     shift, and go to state 47
    tREAL        shift, and go to state 48
    tIDENTIFIER  shift, and go to state 49
    tSTRING      shift, and go to state 50
    tINPUT       shift, and go to state 55
    tSIZEOF      shift, and go to state 59
    tNULL        shift, and go to state 60
    tNOT         shift, and go to state 61
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '('          shift, and go to state 66
    '['          shift, and go to state 88
    '@'          shift, and go to state 68

    fun_call  go to state 70
    expr      go to state 255
    lval      go to state 107
    string    go to state 76


State 253

   75 elif: tELIF '(' expr ')' . tTHEN block
   76     | tELIF '(' expr ')' . tTHEN block elif

    tTHEN  shift, and go to state 256


State 254

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   67 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH expr tIF expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 67 (instr)


State 255

   29 fun_call: expr . '(' exprs ')'
   30         | expr . '(' ')'
   68 instr: tSWEEP expr tRETURN_TYPE expr tDOTS expr tWITH block_expr tIF expr .
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | expr . '%' expr
   92     | expr . '|' expr
   93     | expr . '&' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . tGE expr
   97     | expr . tLE expr
   98     | expr . tNE expr
   99     | expr . tEQ expr
  112 lval: expr . '[' expr ']'

    '|'  shift, and go to state 124
    '&'  shift, and go to state 125
    tEQ  shift, and go to state 126
    tNE  shift, and go to state 127
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    tGE  shift, and go to state 130
    tLE  shift, and go to state 131
    '+'  shift, and go to state 132
    '-'  shift, and go to state 133
    '*'  shift, and go to state 134
    '/'  shift, and go to state 135
    '%'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 68 (instr)


State 256

   75 elif: tELIF '(' expr ')' tTHEN . block
   76     | tELIF '(' expr ')' tTHEN . block elif

    '{'  shift, and go to state 28

    block  go to state 257


State 257

   75 elif: tELIF '(' expr ')' tTHEN block .
   76     | tELIF '(' expr ')' tTHEN block . elif

    tELSE  shift, and go to state 236
    tELIF  shift, and go to state 237

    $default  reduce using rule 75 (elif)

    elif  go to state 258


State 258

   76 elif: tELIF '(' expr ')' tTHEN block elif .

    $default  reduce using rule 76 (elif)
